{"version":3,"sources":["components/Book.js","components/Books.js"],"names":["Book","props","order","onClick","className","_id","name","Books","useState","data","setData","newBook","setNewBook","useEffect","console","log","socket","io","process","on","newOrders","orders","a","Axios","get","response","ordersData","getOrders","onClickEdit","id","put","editOrder","error","onSubmit","e","preventDefault","post","addOrder","type","onChange","target","value","map","item"],"mappings":"sNAEe,SAASA,EAAKC,GAC3B,IAAOC,EAAkBD,EAAlBC,MAAOC,EAAWF,EAAXE,QACd,OACE,qBAAKC,UAAU,QAAQD,QAAS,kBAAMA,EAAQD,EAAMG,MAApD,SACI,4BAAIH,EAAMI,S,YCDH,SAASC,IACtB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACRC,QAAQC,IAAI,kCAEZ,IAAMC,EAASC,aAAG,GAAD,OAAIC,qCACrBF,EAAOG,GAAG,eAAe,WACvBL,QAAQC,IAAI,0BAGdC,EAAOG,GAAG,eAAe,SAACC,GACxBN,QAAQC,IAAI,uBACZL,EAAQU,MAGVJ,EAAOG,GAAG,cAAc,SAACE,GACvBP,QAAQC,IAAI,sBACZL,EAAQW,MAOVL,EAAOG,GAAG,cAAc,WACtBL,QAAQC,IAAI,6BAGb,IAEHF,qBAAU,YACO,uCAAG,8BAAAS,EAAA,sEACOC,IAAMC,IAAN,UAAaN,mCAAb,iBADP,OACVO,EADU,OAEVC,EAAaD,EAAShB,KAC5BC,EAAQgB,GACRZ,QAAQC,IAAIW,GAJI,2CAAH,qDAOfC,GACAb,QAAQC,IAAI,qCACX,IAEH,IAiBMa,EAAc,SAACC,GACjBf,QAAQC,IAAI,eACZ,KACiB,uCAAG,4BAAAO,EAAA,sEACOC,IAAMO,IAAI,UAAGZ,mCAAH,WAAgDW,EAAI,CACnFvB,KAAMK,IAFQ,OACVc,EADU,OAIEA,EAAShB,KAJX,2CAAH,qDAQfsB,GACF,MAAOC,MAGX,OACE,sBAAK5B,UAAU,MAAf,UACE,uBAAM6B,SAlCO,SAACC,GACdpB,QAAQC,IAAI,UACdmB,EAAEC,iBACF,KACc,uCAAG,4BAAAb,EAAA,sEACQC,IAAMa,KAAN,UAAclB,mCAAd,UAAyD,CAC9EZ,KAAMK,IAFO,OACTc,EADS,OAIGA,EAAShB,KAJZ,2CAAH,qDAQd4B,GACAzB,EAAW,IACT,MAAOoB,MAoBP,UACA,uBACEM,KAAK,OACLC,SAAU,SAACL,GAAD,OAAOtB,EAAWsB,EAAEM,OAAOC,QACrCA,MAAO9B,IAET,wBAAQ2B,KAAK,SAAb,uBAGA,uBACA,qBAAKlC,UAAU,cAAf,SACGK,GAAQA,EAAKiC,KAAI,SAACC,GACjB,OAAO,oCAAqB,cAAC3C,EAAD,CAAME,MAAOyC,EAAMxC,QAASyB,IAAjD,MAAUe,EAAKtC","file":"static/js/4.fade65f8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Book(props) {\r\n  const {order, onClick} = props\r\n  return (\r\n    <div className='order' onClick={() => onClick(order._id)}>\r\n        <p>{order.name}</p>\r\n    </div>\r\n  )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Book from \"./Book\";\r\nimport { io } from \"socket.io-client\"\r\n\r\nexport default function Books() {\r\n  const [data, setData] = useState([]);\r\n  const [newBook, setNewBook] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    console.log(\"Client: Socket.io stands by...\")\r\n    // const socket = io('ws://localhost:5000')\r\n    const socket = io(`${process.env.REACT_APP_BACKEND_URL}`)\r\n    socket.on('connnection', () => {\r\n      console.log('connected to server');\r\n    })\r\n\r\n    socket.on('order-added', (newOrders) => {\r\n      console.log(\"Client: order-added\")\r\n      setData(newOrders)\r\n    })\r\n\r\n    socket.on('order-edit', (orders) => {\r\n      console.log(\"Client: order-edit\")\r\n      setData(orders)\r\n    })\r\n\r\n    // socket.on('message', (message) => {\r\n    //   console.log(message);\r\n    // })\r\n\r\n    socket.on('disconnect', () => {\r\n      console.log('Socket disconnecting');\r\n    })\r\n\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const getOrders = async () => {\r\n      const response = await Axios.get(`${process.env.REACT_APP_BACKEND_URL}/books/lists`);\r\n      const ordersData = response.data;\r\n      setData(ordersData);\r\n      console.log(ordersData)\r\n    };\r\n\r\n    getOrders();\r\n    console.log(\"Client: Get data the first time\");\r\n  }, []);\r\n\r\n  const onSubmit = (e) => {\r\n      console.log(\"Submit\")\r\n    e.preventDefault();\r\n    try {\r\n    const addOrder = async () => {\r\n      const response = await Axios.post(`${process.env.REACT_APP_BACKEND_URL}/books`, {\r\n        name: newBook,\r\n      });\r\n      const orderData = response.data;\r\n    //   console.log(orderData)\r\n    //   setData(orderData);\r\n    }\r\n    addOrder();\r\n    setNewBook(\"\")\r\n    } catch (error) {}\r\n  };\r\n\r\n  const onClickEdit = (id) => {\r\n      console.log(\"Submit Edit\");\r\n      try {\r\n        const editOrder = async () => {\r\n          const response = await Axios.put(`${process.env.REACT_APP_BACKEND_URL}/books/` + id, {\r\n            name: newBook,\r\n          });\r\n          const orderData = response.data;\r\n        //   console.log(orderData)\r\n        //   setData(orderData);\r\n        }\r\n        editOrder();\r\n    } catch (error) {}\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <form onSubmit={onSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => setNewBook(e.target.value)}\r\n        value={newBook}\r\n      />\r\n      <button type=\"submit\">submit</button>\r\n      </form>\r\n\r\n      <hr />\r\n      <div className=\"orders-list\">\r\n        {data && data.map((item) => {\r\n          return <div key={item._id}> <Book order={item} onClick={onClickEdit} /> </div>\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}